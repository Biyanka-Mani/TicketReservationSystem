@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Route Search";
}


@if (TempData["ErrorMessage"] != null)
{
    <div id="errorAlert" class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
<style>
    .fade-out {
        opacity: 1;
        transition: opacity 2s ease-out; 
    }

    .hidden {
        display: none;
    }
</style>
<div class="card" style="margin: 20px;">
    <div class="card-body">
        <h2 class="card-title">Enter Start and End Destination</h2>

        @model List<TicketReservation.App.Models.DestinationViewModel>

        <form method="get" autocomplete="off" action="@Url.Action("ViewBookings", "Adminstrator")">

            <div class="form-group">
                <label for="startingPoint" class="form-label">Starting Point:</label>
                <div class="input-group">
                    <input type="text" list="destinations" id="startingPointSearch" class="form-control" placeholder="Search starting point.." oninput="updateSelectedStartingPointId()">
                    <datalist id="destinationst">
                        @foreach (var destination in Model)
                        {
                            <option value="@destination.Destination_name" data-id="@destination.Id"></option>
                        }
                    </datalist>
                    <input type="hidden" id="SelectedStartingPointId" name="SelectedStartingPointId" />
                </div>
            </div>

            <div class="form-group">
                <label for="endingPoint" class="form-label">End Point:</label>
                <div class="input-group">
                    <input type="text" list="destinations" id="EndPointSearch" class="form-control" placeholder="Search end point.." oninput="updateSelectedEndPointId()">
                    <datalist id="destinations">
                        @foreach (var destination in Model)
                        {
                            <option value="@destination.Destination_name" data-id="@destination.Id"></option>
                        }
                    </datalist>
                    <input type="hidden" id="SelectedEndPointId" name="SelectedEndPointId" />
                </div>
            </div>

            <div class="form-group" style="margin-top: 10px;">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </form>
    </div>
</div>


<script>
    setTimeout(function () {
        document.getElementById('successAlert').classList.add('hidden');
        document.getElementById('errorAlert').classList.add('hidden');
    }, 5000);
    function updateSelectedStartingPointId() {
        var input = document.getElementById("startingPointSearch");
        var selectedIdInput = document.getElementById("SelectedStartingPointId");
        var datalist = document.getElementById("destinations");

        var selectedOption = getSelectedOption(input, datalist);
        if (selectedOption) {
            selectedIdInput.value = selectedOption.getAttribute("data-id");
        } else {
            selectedIdInput.value = "";
        }
    }

    function updateSelectedEndPointId() {
        var input = document.getElementById("EndPointSearch");
        var selectedIdInput = document.getElementById("SelectedEndPointId");
        var datalist = document.getElementById("destinations");

        var selectedOption = getSelectedOption(input, datalist);
        if (selectedOption) {
            selectedIdInput.value = selectedOption.getAttribute("data-id");
        } else {
            selectedIdInput.value = "";
        }
    }

    function getSelectedOption(input, datalist) {
        var inputValue = input.value;
        var options = datalist.querySelectorAll("option");

        for (var i = 0; i < options.length; i++) {
            if (options[i].value === inputValue) {
                return options[i];
            }
        }

        return null;
    }
</script>